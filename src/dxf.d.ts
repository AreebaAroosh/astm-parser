/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type BlockEntity = EntityText | EntityPoint | EntityPolyline | EntityLine | EntityAttDef;

export interface DxfSchema {
  header: {};
  blocks: {
    [k: string]: Block;
  };
  entities: (EntityText | EntityInsert)[];
}
export interface Block {
  layer: string;
  name: string;
  type: number;
  position?: Point;
  entities?: BlockEntity[];
  handle: number;
}
export interface Point {
  x?: number;
  y?: number;
}
export interface EntityText {
  type: string;
  layer: string;
  style?: string;
  startPoint?: Point;
  textHeight?: number;
  rotation?: number;
  text?: string;
  /**
   * A handle is a hexadecimal number that is a unique tag for each entity in a drawing or DXF file. There must be no duplicate handles
   */
  handle: number;
}
export interface EntityPoint {
  type: string;
  position?: Point;
  layer: string;
  handle: number;
  angle?: number;
  thickness?: number;
}
export interface EntityPolyline {
  type: string;
  vertices?: Vertex[];
  layer: string;
  shape?: boolean;
  includesCurveFitVertices?: boolean;
  includesSplineFitVertices?: boolean;
  is3dPolyline?: boolean;
  is3dPolygonMesh?: boolean;
  is3dPolygonMeshClosed?: boolean;
  isPolyfaceMesh?: boolean;
  hasContinuousLinetypePattern?: boolean;
  handle: number;
}
export interface Vertex {
  type: string;
  x: number;
  y: number;
  layer: string;
}
export interface EntityLine {
  type: string;
  vertices?: Point[];
  layer: string;
  handle: number;
}
export interface EntityAttDef {
  type: string;
  scale?: number;
  textStyle?: string;
  layer: string;
  startPoint?: Point;
  endPoint?: Point;
  textHeight?: number;
  text?: string;
  tag?: string;
  prompt?: string;
  invisible?: boolean;
  constant?: boolean;
  verificationRequired?: boolean;
  preset?: boolean;
  horizontalJustification?: number;
  handle: number;
}
export interface EntityInsert {
  type: string;
  layer: string;
  position?: Point;
  name?: string;
  /**
   * A handle is a hexadecimal number that is a unique tag for each entity in a drawing or DXF file. There must be no duplicate handles
   */
  handle: number;
}
